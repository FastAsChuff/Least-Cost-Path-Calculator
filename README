This program generates an m column by n row array of random non-negative numbers representing costs. 
It then calculates an m column by n row array of minimum costs of a journey to a destination element (Ex,Ey). 
The path taken can include moves up, down, left, or right only. 
No diagonal moves or moves off the edge of the array are allowed. 
The total cost of a journey is the sum of all the element costs along its path.
Optionally, use Sx, Sy for an example least cost path. (Outputs leastcostpath.htm)
Author: Simon Goater Mar 2024.
Usage:- ./pathprob2.bin m n Ex Ey [Sx Sy]
1 <= m,n <= 32767
0 <= Ex,Sx < m
0 <= Ey,Sy < n
e.g. ./pathprob2.bin 20 20 5 4 18 12

Output:-
6 7 7 3 1 1 0 5 6 4 9 2 2 4 9 8 1 5 6 9 
8 1 5 9 1 8 3 6 3 5 0 1 4 9 4 5 0 7 2 8 
3 2 0 6 8 1 4 9 9 2 8 7 5 5 8 7 3 1 3 9 
8 5 0 2 4 5 9 4 4 2 4 7 4 4 3 2 5 9 3 4 
1 3 3 7 9 1 6 2 4 9 3 2 6 4 6 0 1 6 6 5 
8 0 2 4 6 8 8 1 7 1 8 1 4 3 0 5 7 6 0 3 
7 3 8 3 7 4 3 0 2 1 7 0 1 2 6 7 0 4 0 9 
7 0 0 4 6 0 9 3 8 9 6 5 5 4 0 2 1 5 5 3 
6 2 6 9 4 2 6 6 9 9 6 8 9 8 2 5 1 2 0 9 
3 9 7 8 3 7 3 6 5 8 0 1 2 6 1 9 0 9 5 1 
8 3 0 8 2 2 5 3 6 6 4 2 5 1 0 0 1 5 7 6 
5 9 9 8 7 2 9 9 2 4 1 0 8 1 0 0 5 8 5 2 
6 9 6 1 1 6 3 4 4 2 2 9 3 1 9 0 4 8 0 8 
5 3 0 3 6 1 5 1 1 0 5 7 9 1 0 2 0 3 6 4 
8 0 5 1 2 5 2 8 5 4 6 0 7 6 3 3 9 0 6 2 
0 2 9 2 5 9 4 5 3 3 1 3 3 7 4 7 4 6 5 1 
2 3 2 9 2 7 4 1 8 1 4 8 5 5 2 0 5 7 8 0 
2 1 3 7 8 7 5 4 6 2 6 8 8 8 0 0 7 4 3 5 
7 7 6 2 5 8 5 0 7 5 2 9 6 5 9 7 4 6 1 2 
8 9 1 6 9 1 8 7 7 2 2 7 1 0 9 6 9 6 6 6 
6 iterations required.
Least Cost Path example has 24 nodes and cost 41.
[18, 12] [18, 13] [17, 13] [16, 13] [15, 13] [15, 12] [15, 11] [15, 10] 
[14, 10] [14, 9] [14, 8] [14, 7] [13, 7] [13, 6] [12, 6] [11, 6] 
[10, 6] [9, 6] [8, 6] [7, 6] [7, 5] [7, 4] [6, 4] [5, 4] 
